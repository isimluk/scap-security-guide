<def-group>
 <!-- THIS FILE IS GENERATED by create_services_enabled.py.  DO NOT EDIT.  -->
  <definition class="compliance" id="service_irqbalance_enabled"
  version="1">
    <metadata>
      <title>Service irqbalance Enabled</title>
      <affected family="unix">
        <platform>Red Hat Enterprise Linux 6</platform>
      </affected>
      <description>The irqbalance service should be enabled if possible.</description>
      <reference source="changeme" ref_id="20140828" ref_url="test_attestation" />
    </metadata>
    <criteria comment="package irqbalance installed and service irqbalance is configured to start" operator="AND">
    <extend_definition comment="irqbalance installed" definition_ref="package_irqbalance_installed" />
    <criteria operator="OR" comment="service irqbalance is configured to start">
      <criteria operator="AND" comment="service irqbalance is configured with runlevel">
        <extend_definition comment="RHEL6 installed" definition_ref="installed_OS_is_rhel6"/>
        <criteria operator="OR" comment="service irqbalance is configured to start">
          <criterion comment="irqbalance runlevel 0" test_ref="test_runlevel0_irqbalance" />
          <criterion comment="irqbalance runlevel 1" test_ref="test_runlevel1_irqbalance" />
          <criterion comment="irqbalance runlevel 2" test_ref="test_runlevel2_irqbalance" />
          <criterion comment="irqbalance runlevel 3" test_ref="test_runlevel3_irqbalance" />
          <criterion comment="irqbalance runlevel 4" test_ref="test_runlevel4_irqbalance" />
          <criterion comment="irqbalance runlevel 5" test_ref="test_runlevel5_irqbalance" />
          <criterion comment="irqbalance runlevel 6" test_ref="test_runlevel6_irqbalance" />
        </criteria>
      </criteria>
      <criteria operator="AND" comment="service irqbalance is configured with systemd">
        <extend_definition comment="RHEL7 installed" definition_ref="installed_OS_is_rhel7"/>
        <criteria operator="OR" comment="service irqbalance is configured to start">
          <criterion comment="multi-user.target wants irqbalance" test_ref="test_multi_user_wants_irqbalance" />
        </criteria>
      </criteria>
    </criteria>
    </criteria>
  </definition>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel0_irqbalance"
  version="2">
    <unix:object object_ref="obj_runlevel0_irqbalance" />
    <unix:state state_ref="state_service_irqbalance_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel1_irqbalance"
  version="2">
    <unix:object object_ref="obj_runlevel1_irqbalance" />
    <unix:state state_ref="state_service_irqbalance_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel2_irqbalance"
  version="2">
    <unix:object object_ref="obj_runlevel2_irqbalance" />
    <unix:state state_ref="state_service_irqbalance_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel3_irqbalance"
  version="2">
    <unix:object object_ref="obj_runlevel3_irqbalance" />
    <unix:state state_ref="state_service_irqbalance_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel4_irqbalance"
  version="2">
    <unix:object object_ref="obj_runlevel4_irqbalance" />
    <unix:state state_ref="state_service_irqbalance_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel5_irqbalance"
  version="2">
    <unix:object object_ref="obj_runlevel5_irqbalance" />
    <unix:state state_ref="state_service_irqbalance_on" />
  </unix:runlevel_test>
  <unix:runlevel_test check="all" check_existence="any_exist"
  comment="Runlevel test" id="test_runlevel6_irqbalance"
  version="2">
    <unix:object object_ref="obj_runlevel6_irqbalance" />
    <unix:state state_ref="state_service_irqbalance_on" />
  </unix:runlevel_test>

  <linux:systemdunitproperty_test check="all" check_existence="any_exist"
  comment="systemd test" id="test_multi_user_wants_irqbalance"
  version="1">
    <linux:object object_ref="obj_multi_user_wants" />
    <linux:state state_ref="state_systemd_irqbalance_on"/>
  </linux:systemdunitproperty_test>

   <linux:systemdunitdependency_object id="obj_multi_user_wants" comment="list of dependencies of multi-user.target" version="1">
      <linux:unit>multi-user.target</linux:unit>
   </linux:systemdunitdependency_object>

    <linux:systemdunitdependency_state id="state_systemd_irqbalance_on" comment="is irqbalance listed at least once in the dependencies" version="1">
      <linux:dependency entity_check="at least one">irqbalance.target</linux:dependency>
    </linux:systemdunitdependency_state>


  <unix:runlevel_object id="obj_runlevel0_irqbalance" version="1">
    <unix:service_name>irqbalance</unix:service_name>
    <unix:runlevel operation="equals">0</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel1_irqbalance" version="1">
    <unix:service_name>irqbalance</unix:service_name>
    <unix:runlevel operation="equals">1</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel2_irqbalance" version="1">
    <unix:service_name>irqbalance</unix:service_name>
    <unix:runlevel operation="equals">2</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel3_irqbalance" version="1">
    <unix:service_name>irqbalance</unix:service_name>
    <unix:runlevel operation="equals">3</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel4_irqbalance" version="1">
    <unix:service_name>irqbalance</unix:service_name>
    <unix:runlevel operation="equals">4</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel5_irqbalance" version="1">
    <unix:service_name>irqbalance</unix:service_name>
    <unix:runlevel operation="equals">5</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_object id="obj_runlevel6_irqbalance" version="1">
    <unix:service_name>irqbalance</unix:service_name>
    <unix:runlevel operation="equals">6</unix:runlevel>
  </unix:runlevel_object>
  <unix:runlevel_state comment="configured to start" id="state_service_irqbalance_on" version="1">
    <unix:start datatype="boolean">true</unix:start>
    <unix:kill datatype="boolean">false</unix:kill>
  </unix:runlevel_state>
</def-group>
